name: icon-transactions
networkName: mainnet

autoscaler:
  enabled: true
  maxReplicas: 25
  averageCPU: 50

service:
  name: icon-blocks
  type: ClusterIP
  externalPort: 80

ingress:
  enabled: true
  regionalHost: "app.region.example.com"
  apexHost: "app.example.com"
  annotations: null

api:
  image:
    repository: 868027517775.dkr.ecr.us-west-2.amazonaws.com/icon-transactions-api
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  annotations: null
  internal:
    port: 80
  health:
    port: 9300
    prefix: "/health"
    pollingInterval: 60
  metrics:
    port: 9400
    prefix: "/metrics"
  rest:
    prefix: "/api/v1"
  websocket:
    prefix: "/ws/v1"
  logging:
    level: INFO
    toFile: false
    filename: "api.log"
    format: string
  cors:
    allow_origins: "*"
  db:
    user: postgres
    password: changeme
  kafka:
    topics:
      blocks: blocks
      transactions: transactions
      logs: logs
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  tolerations: ""
  nodeSelector: null
  affinity: null
  priorityClassName: ""

worker:
  image:
    repository: 868027517775.dkr.ecr.us-west-2.amazonaws.com/icon-transactions-worker
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  annotations: null
  health:
    port: 9300
    prefix: "/health"
    pollingInterval: 60
  metrics:
    port: 9400
    prefix: "/metrics"
  rest:
    prefix: "/api/v1"
  websocket:
    prefix: "/ws/v1"
  logging:
    level: INFO
    toFile: false
    filename: "worker.log"
    format: string
  db:
    user: postgres
    password: changeme
  kafka:
    topics:
      blocks: blocks
      transactions: transactions
      logs: logs
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  tolerations: ""
  nodeSelector: null
  affinity: null
  priorityClassName: ""

kafka:
  kafkaBrokerURL: ""
  schemaRegistryURL: ""
  kafkaGroupID: websocket-group
  consumerGroup: blocks-consumer-group
  schemaNameTopics: "blocks-ws:block"

db:
  driver: postgres
  host: localhost
  port: 5432
  name: blocks
  sslMode: disable
  timezone: UTC

redis:
  host: "redis"
  port: 6379
  password: ""
  channel: "blocks"
  sentinel:
    clientMode: false
    clientMasterName: "master"
